// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_logic.proto

#include "server_logic.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace rpc_server {
      template <typename>
PROTOBUF_CONSTEXPR GameStateRes_StateEntry_DoNotUse::GameStateRes_StateEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct GameStateRes_StateEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameStateRes_StateEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameStateRes_StateEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GameStateRes_StateEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameStateRes_StateEntry_DoNotUseDefaultTypeInternal _GameStateRes_StateEntry_DoNotUse_default_instance_;

inline constexpr GameStateReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : game_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameStateReq::GameStateReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GameStateReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameStateReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameStateReqDefaultTypeInternal() {}
  union {
    GameStateReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameStateReqDefaultTypeInternal _GameStateReq_default_instance_;

inline constexpr GameActionRes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameActionRes::GameActionRes(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GameActionResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameActionResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameActionResDefaultTypeInternal() {}
  union {
    GameActionRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameActionResDefaultTypeInternal _GameActionRes_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR GameActionReq_ParametersEntry_DoNotUse::GameActionReq_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct GameActionReq_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameActionReq_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameActionReq_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GameActionReq_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameActionReq_ParametersEntry_DoNotUseDefaultTypeInternal _GameActionReq_ParametersEntry_DoNotUse_default_instance_;

inline constexpr GameStateRes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : state_{},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameStateRes::GameStateRes(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GameStateResDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameStateResDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameStateResDefaultTypeInternal() {}
  union {
    GameStateRes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameStateResDefaultTypeInternal _GameStateRes_default_instance_;

inline constexpr GameActionReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : parameters_{},
        action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameActionReq::GameActionReq(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GameActionReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameActionReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameActionReqDefaultTypeInternal() {}
  union {
    GameActionReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameActionReqDefaultTypeInternal _GameActionReq_default_instance_;
}  // namespace rpc_server
static ::_pb::Metadata file_level_metadata_server_5flogic_2eproto[6];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_server_5flogic_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_server_5flogic_2eproto = nullptr;
const ::uint32_t TableStruct_server_5flogic_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameActionReq_ParametersEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameActionReq_ParametersEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameActionReq_ParametersEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameActionReq_ParametersEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameActionReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameActionReq, _impl_.action_),
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameActionReq, _impl_.parameters_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameActionRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameActionRes, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameActionRes, _impl_.message_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameStateReq, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameStateReq, _impl_.game_id_),
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameStateRes_StateEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameStateRes_StateEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameStateRes_StateEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameStateRes_StateEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameStateRes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameStateRes, _impl_.success_),
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameStateRes, _impl_.message_),
    PROTOBUF_FIELD_OFFSET(::rpc_server::GameStateRes, _impl_.state_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::rpc_server::GameActionReq_ParametersEntry_DoNotUse)},
        {12, -1, -1, sizeof(::rpc_server::GameActionReq)},
        {22, -1, -1, sizeof(::rpc_server::GameActionRes)},
        {32, -1, -1, sizeof(::rpc_server::GameStateReq)},
        {41, 51, -1, sizeof(::rpc_server::GameStateRes_StateEntry_DoNotUse)},
        {53, -1, -1, sizeof(::rpc_server::GameStateRes)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::rpc_server::_GameActionReq_ParametersEntry_DoNotUse_default_instance_._instance,
    &::rpc_server::_GameActionReq_default_instance_._instance,
    &::rpc_server::_GameActionRes_default_instance_._instance,
    &::rpc_server::_GameStateReq_default_instance_._instance,
    &::rpc_server::_GameStateRes_StateEntry_DoNotUse_default_instance_._instance,
    &::rpc_server::_GameStateRes_default_instance_._instance,
};
const char descriptor_table_protodef_server_5flogic_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\022server_logic.proto\022\nrpc_server\"\221\001\n\rGam"
    "eActionReq\022\016\n\006action\030\001 \001(\014\022=\n\nparameters"
    "\030\002 \003(\0132).rpc_server.GameActionReq.Parame"
    "tersEntry\0321\n\017ParametersEntry\022\013\n\003key\030\001 \001("
    "\t\022\r\n\005value\030\002 \001(\014:\0028\001\"1\n\rGameActionRes\022\017\n"
    "\007success\030\001 \001(\010\022\017\n\007message\030\002 \001(\014\"\037\n\014GameS"
    "tateReq\022\017\n\007game_id\030\001 \001(\014\"\222\001\n\014GameStateRe"
    "s\022\017\n\007success\030\001 \001(\010\022\017\n\007message\030\002 \001(\014\0222\n\005s"
    "tate\030\003 \003(\0132#.rpc_server.GameStateRes.Sta"
    "teEntry\032,\n\nStateEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
    "lue\030\002 \001(\014:\0028\0012\237\001\n\013LogicServer\022J\n\022Process"
    "_gameAction\022\031.rpc_server.GameActionReq\032\031"
    ".rpc_server.GameActionRes\022D\n\016Get_game_st"
    "ate\022\030.rpc_server.GameStateReq\032\030.rpc_serv"
    "er.GameStateResb\006proto3"
};
static ::absl::once_flag descriptor_table_server_5flogic_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_server_5flogic_2eproto = {
    false,
    false,
    583,
    descriptor_table_protodef_server_5flogic_2eproto,
    "server_logic.proto",
    &descriptor_table_server_5flogic_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_server_5flogic_2eproto::offsets,
    file_level_metadata_server_5flogic_2eproto,
    file_level_enum_descriptors_server_5flogic_2eproto,
    file_level_service_descriptors_server_5flogic_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_server_5flogic_2eproto_getter() {
  return &descriptor_table_server_5flogic_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_server_5flogic_2eproto(&descriptor_table_server_5flogic_2eproto);
namespace rpc_server {
// ===================================================================

GameActionReq_ParametersEntry_DoNotUse::GameActionReq_ParametersEntry_DoNotUse() {}
GameActionReq_ParametersEntry_DoNotUse::GameActionReq_ParametersEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata GameActionReq_ParametersEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_server_5flogic_2eproto_getter, &descriptor_table_server_5flogic_2eproto_once,
      file_level_metadata_server_5flogic_2eproto[0]);
}
// ===================================================================

class GameActionReq::_Internal {
 public:
};

GameActionReq::GameActionReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rpc_server.GameActionReq)
}
inline PROTOBUF_NDEBUG_INLINE GameActionReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : parameters_{visibility, arena, from.parameters_},
        action_(arena, from.action_),
        _cached_size_{0} {}

GameActionReq::GameActionReq(
    ::google::protobuf::Arena* arena,
    const GameActionReq& from)
    : ::google::protobuf::Message(arena) {
  GameActionReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:rpc_server.GameActionReq)
}
inline PROTOBUF_NDEBUG_INLINE GameActionReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : parameters_{visibility, arena},
        action_(arena),
        _cached_size_{0} {}

inline void GameActionReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GameActionReq::~GameActionReq() {
  // @@protoc_insertion_point(destructor:rpc_server.GameActionReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameActionReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.action_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GameActionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc_server.GameActionReq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  _impl_.action_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GameActionReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 43, 2> GameActionReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GameActionReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes action = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameActionReq, _impl_.action_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes action = 1;
    {PROTOBUF_FIELD_OFFSET(GameActionReq, _impl_.action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // map<string, bytes> parameters = 2;
    {PROTOBUF_FIELD_OFFSET(GameActionReq, _impl_.parameters_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GameActionReq()._impl_.parameters_)>(
        1, 0, 0, 9,
        12)},
  }}, {{
    "\30\0\12\0\0\0\0\0"
    "rpc_server.GameActionReq"
    "parameters"
  }},
};

::uint8_t* GameActionReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc_server.GameActionReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes action = 1;
  if (!this->_internal_action().empty()) {
    const std::string& _s = this->_internal_action();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // map<string, bytes> parameters = 2;
  if (!_internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_BYTES>;
    const auto& field = _internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rpc_server.GameActionReq.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rpc_server.GameActionReq.parameters");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc_server.GameActionReq)
  return target;
}

::size_t GameActionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc_server.GameActionReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, bytes> parameters = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_parameters_size());
  for (const auto& entry : _internal_parameters()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_BYTES>::ByteSizeLong(entry.first, entry.second);
  }
  // bytes action = 1;
  if (!this->_internal_action().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GameActionReq::_class_data_ = {
    GameActionReq::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GameActionReq::GetClassData() const {
  return &_class_data_;
}

void GameActionReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GameActionReq*>(&to_msg);
  auto& from = static_cast<const GameActionReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc_server.GameActionReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  if (!from._internal_action().empty()) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameActionReq::CopyFrom(const GameActionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc_server.GameActionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GameActionReq::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GameActionReq::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GameActionReq::InternalSwap(GameActionReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_, &other->_impl_.action_, arena);
}

::google::protobuf::Metadata GameActionReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_server_5flogic_2eproto_getter, &descriptor_table_server_5flogic_2eproto_once,
      file_level_metadata_server_5flogic_2eproto[1]);
}
// ===================================================================

class GameActionRes::_Internal {
 public:
};

GameActionRes::GameActionRes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rpc_server.GameActionRes)
}
inline PROTOBUF_NDEBUG_INLINE GameActionRes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_(arena, from.message_),
        _cached_size_{0} {}

GameActionRes::GameActionRes(
    ::google::protobuf::Arena* arena,
    const GameActionRes& from)
    : ::google::protobuf::Message(arena) {
  GameActionRes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:rpc_server.GameActionRes)
}
inline PROTOBUF_NDEBUG_INLINE GameActionRes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void GameActionRes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
GameActionRes::~GameActionRes() {
  // @@protoc_insertion_point(destructor:rpc_server.GameActionRes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameActionRes::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GameActionRes::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc_server.GameActionRes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GameActionRes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GameActionRes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GameActionRes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes message = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GameActionRes, _impl_.message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GameActionRes, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GameActionRes, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(GameActionRes, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bytes message = 2;
    {PROTOBUF_FIELD_OFFSET(GameActionRes, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GameActionRes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc_server.GameActionRes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  // bytes message = 2;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc_server.GameActionRes)
  return target;
}

::size_t GameActionRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc_server.GameActionRes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GameActionRes::_class_data_ = {
    GameActionRes::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GameActionRes::GetClassData() const {
  return &_class_data_;
}

void GameActionRes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GameActionRes*>(&to_msg);
  auto& from = static_cast<const GameActionRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc_server.GameActionRes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameActionRes::CopyFrom(const GameActionRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc_server.GameActionRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GameActionRes::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GameActionRes::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GameActionRes::InternalSwap(GameActionRes* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata GameActionRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_server_5flogic_2eproto_getter, &descriptor_table_server_5flogic_2eproto_once,
      file_level_metadata_server_5flogic_2eproto[2]);
}
// ===================================================================

class GameStateReq::_Internal {
 public:
};

GameStateReq::GameStateReq(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rpc_server.GameStateReq)
}
inline PROTOBUF_NDEBUG_INLINE GameStateReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : game_id_(arena, from.game_id_),
        _cached_size_{0} {}

GameStateReq::GameStateReq(
    ::google::protobuf::Arena* arena,
    const GameStateReq& from)
    : ::google::protobuf::Message(arena) {
  GameStateReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:rpc_server.GameStateReq)
}
inline PROTOBUF_NDEBUG_INLINE GameStateReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : game_id_(arena),
        _cached_size_{0} {}

inline void GameStateReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GameStateReq::~GameStateReq() {
  // @@protoc_insertion_point(destructor:rpc_server.GameStateReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameStateReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.game_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GameStateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc_server.GameStateReq)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.game_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GameStateReq::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GameStateReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GameStateReq_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes game_id = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GameStateReq, _impl_.game_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes game_id = 1;
    {PROTOBUF_FIELD_OFFSET(GameStateReq, _impl_.game_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GameStateReq::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc_server.GameStateReq)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes game_id = 1;
  if (!this->_internal_game_id().empty()) {
    const std::string& _s = this->_internal_game_id();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc_server.GameStateReq)
  return target;
}

::size_t GameStateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc_server.GameStateReq)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes game_id = 1;
  if (!this->_internal_game_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_game_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GameStateReq::_class_data_ = {
    GameStateReq::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GameStateReq::GetClassData() const {
  return &_class_data_;
}

void GameStateReq::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GameStateReq*>(&to_msg);
  auto& from = static_cast<const GameStateReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc_server.GameStateReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_game_id().empty()) {
    _this->_internal_set_game_id(from._internal_game_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameStateReq::CopyFrom(const GameStateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc_server.GameStateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GameStateReq::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GameStateReq::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GameStateReq::InternalSwap(GameStateReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.game_id_, &other->_impl_.game_id_, arena);
}

::google::protobuf::Metadata GameStateReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_server_5flogic_2eproto_getter, &descriptor_table_server_5flogic_2eproto_once,
      file_level_metadata_server_5flogic_2eproto[3]);
}
// ===================================================================

GameStateRes_StateEntry_DoNotUse::GameStateRes_StateEntry_DoNotUse() {}
GameStateRes_StateEntry_DoNotUse::GameStateRes_StateEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata GameStateRes_StateEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_server_5flogic_2eproto_getter, &descriptor_table_server_5flogic_2eproto_once,
      file_level_metadata_server_5flogic_2eproto[4]);
}
// ===================================================================

class GameStateRes::_Internal {
 public:
};

GameStateRes::GameStateRes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:rpc_server.GameStateRes)
}
inline PROTOBUF_NDEBUG_INLINE GameStateRes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : state_{visibility, arena, from.state_},
        message_(arena, from.message_),
        _cached_size_{0} {}

GameStateRes::GameStateRes(
    ::google::protobuf::Arena* arena,
    const GameStateRes& from)
    : ::google::protobuf::Message(arena) {
  GameStateRes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.success_ = from._impl_.success_;

  // @@protoc_insertion_point(copy_constructor:rpc_server.GameStateRes)
}
inline PROTOBUF_NDEBUG_INLINE GameStateRes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : state_{visibility, arena},
        message_(arena),
        _cached_size_{0} {}

inline void GameStateRes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
GameStateRes::~GameStateRes() {
  // @@protoc_insertion_point(destructor:rpc_server.GameStateRes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GameStateRes::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GameStateRes::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc_server.GameStateRes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.state_.Clear();
  _impl_.message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GameStateRes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 1, 37, 2> GameStateRes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GameStateRes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes message = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GameStateRes, _impl_.message_)}},
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GameStateRes, _impl_.success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GameStateRes, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(GameStateRes, _impl_.success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bytes message = 2;
    {PROTOBUF_FIELD_OFFSET(GameStateRes, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // map<string, bytes> state = 3;
    {PROTOBUF_FIELD_OFFSET(GameStateRes, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(GameStateRes()._impl_.state_)>(
        1, 0, 0, 9,
        12)},
  }}, {{
    "\27\0\0\5\0\0\0\0"
    "rpc_server.GameStateRes"
    "state"
  }},
};

::uint8_t* GameStateRes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:rpc_server.GameStateRes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_success(), target);
  }

  // bytes message = 2;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // map<string, bytes> state = 3;
  if (!_internal_state().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_BYTES>;
    const auto& field = _internal_state();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rpc_server.GameStateRes.state");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "rpc_server.GameStateRes.state");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc_server.GameStateRes)
  return target;
}

::size_t GameStateRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc_server.GameStateRes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, bytes> state = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_state_size());
  for (const auto& entry : _internal_state()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_BYTES>::ByteSizeLong(entry.first, entry.second);
  }
  // bytes message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GameStateRes::_class_data_ = {
    GameStateRes::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GameStateRes::GetClassData() const {
  return &_class_data_;
}

void GameStateRes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GameStateRes*>(&to_msg);
  auto& from = static_cast<const GameStateRes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:rpc_server.GameStateRes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.state_.MergeFrom(from._impl_.state_);
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameStateRes::CopyFrom(const GameStateRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc_server.GameStateRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GameStateRes::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GameStateRes::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GameStateRes::InternalSwap(GameStateRes* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.state_.InternalSwap(&other->_impl_.state_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
        swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata GameStateRes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_server_5flogic_2eproto_getter, &descriptor_table_server_5flogic_2eproto_once,
      file_level_metadata_server_5flogic_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc_server
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
