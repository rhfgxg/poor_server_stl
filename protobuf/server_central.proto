// 中心服务器
syntax = "proto3";
package rpc_server;

import "common.proto";  // 服务器类型

service CentralServer
{
    rpc Register_server (RegisterServerReq) returns (RegisterServerRes);    // 服务器注册
    rpc Unregister_server (UnregisterServerReq) returns (UnregisterServerRes);    // 服务器断开
    rpc Get_connec_poor (MultipleConnectPoorReq) returns (MultipleConnectPoorRes);    // 获取多个连接池信息
    rpc Heartbeat (HeartbeatReq) returns (HeartbeatRes);    // 接收心跳包
}

// 注册服务器请求
message RegisterServerReq
{
    ServerType server_type = 1;  // 服务器类型
    bytes address = 2;  // 服务器地址
    bytes port = 3;  // 服务器端口
}
// 注册服务器响应
message RegisterServerRes 
{
    bool success = 1;
    bytes message = 2;
}

// 断开服务器连接请求
message UnregisterServerReq 
{
    ServerType server_type = 1;  // 服务器类型
    bytes address = 2;  // 服务器地址
    bytes port = 3;  // 服务器端口
}
// 断开服务器连接响应
message UnregisterServerRes
{
    bool success = 1;
    bytes message = 2;
}

// 获取连接池信息请求
message MultipleConnectPoorReq
{
    repeated ServerType server_types = 1; // 请求多个服务器类型的连接池
}
// 获取连接池信息响应
message MultipleConnectPoorRes
{
    bool success = 1;
    repeated ConnectPool connect_pools = 2; // 返回多个连接池
    bytes message = 3;
}
// 连接信息
message ConnectInfo
{
    bytes address = 1;  // 目标服务器地址
    int32 port = 2;  // 目标服务器端口
}
// 连接池信息
message ConnectPool
{
    ServerType server_type = 1;
    repeated ConnectInfo connect_info = 2;
}

// 心跳请求
message HeartbeatReq
{
    ServerType server_type = 1;  // 服务器类型
    bytes address = 2;  // 服务器地址
    bytes port = 3;  // 服务器端口
}
// 心跳响应
message HeartbeatRes
{
    bool success = 1;
    bytes message = 2;
}
