syntax = "proto3";
package rpc_server;

import "common.proto";  // 引入公共数据类型：服务类型：客户端与服务器通信的服务类型

// 网关服务器
service GatewayServer
{
    rpc Client_register (ClientRegisterReq) returns (ClientRegisterRes); // 客户端注册
    rpc Client_heartbeat (ClientHeartbeatReq) returns (ClientHeartbeatRes);    // 接收客户端心跳包
    rpc Get_gateway_pool (GetGatewayPoolReq) returns (GetGatewayPoolRes); // 获取网关服务器连接池
    rpc Request_forward (ForwardReq) returns (ForwardRes);  // 转发请求
    rpc Get_file_server_address (GetFileServerAddressReq) returns (GetFileServerAddressRes); // 获取文件服务器地址，直连文件服务器进行文件传递
}

// 客户端注册请求
message ClientRegisterReq
{
    bytes address = 1; // 客户端地址
}
// 客户端注册响应
message ClientRegisterRes
{
    bool success = 1;
    repeated GatewayConnectInfo connect_info = 2;  // 多个链接信息：连接池
    bytes message = 3;
    bytes client_token = 4; // 分配给客户端的token
}

// 客户端心跳包请求
message ClientHeartbeatReq
{
    bytes client_token = 1;
    bytes address = 2; // 客户端地址
}
// 客户端心跳包响应
message ClientHeartbeatRes
{
    bool success = 1; // 操作结果
    bytes message = 2; // 响应信息
}

// 获取网关服务器连接池请求
message GetGatewayPoolReq
{
    bytes address = 1; // 客户端地址
    bytes client_token = 2; // 客户端token
}
// 获取网关服务器连接池响应
message GetGatewayPoolRes
{
    bool success = 1;
    repeated GatewayConnectInfo connect_info = 2;  // 多个链接信息：连接池
    bytes message = 3;
}
// 连接信息
message GatewayConnectInfo
{
    bytes address = 1;  // 目标服务器地址
    int32 port = 2;  // 目标服务器端口
}

// 转发请求
message ForwardReq
{
    ServiceType service_type = 1;   // 目标服务枚举
    bytes payload = 2;  // 负载
}
// 转发请求响应
message ForwardRes
{
    bool success = 1;
    bytes response = 2; // 响应负载
}

// 获取文件服务器地址请求
message GetFileServerAddressReq
{
    bytes account = 1; // 账号
    bytes client_token = 2;
    bytes user_token = 3;
}
// 获取文件服务器地址响应
message GetFileServerAddressRes 
{
    bool success = 1; // 操作结果
    bytes address = 2; // 文件服务器地址
    bytes port = 3; // 文件服务器端口
    bytes message = 4; // 响应信息
}
